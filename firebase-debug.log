[debug] [2025-10-16T13:44:50.871Z] ----------------------------------------------------------------------
[debug] [2025-10-16T13:44:50.872Z] Command:       /usr/local/bin/node /Users/tolgakececi/Desktop/operasyon-solarveyo/node_modules/.bin/firebase deploy --only firestore:rules
[debug] [2025-10-16T13:44:50.873Z] CLI Version:   13.35.1
[debug] [2025-10-16T13:44:50.873Z] Platform:      darwin
[debug] [2025-10-16T13:44:50.873Z] Node Version:  v22.13.0
[debug] [2025-10-16T13:44:50.873Z] Time:          Thu Oct 16 2025 16:44:50 GMT+0300 (GMT+03:00)
[debug] [2025-10-16T13:44:50.873Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-10-16T13:44:50.874Z] >>> [apiv2][query] GET https://firebase-public.firebaseio.com/cli.json [none]
[debug] [2025-10-16T13:44:50.956Z] Object "/firestore" in "firebase.json" has unknown property: {"additionalProperty":"location"}
[debug] [2025-10-16T13:44:50.957Z] Field "/firestore" in "firebase.json" is possibly invalid: must be array
[debug] [2025-10-16T13:44:50.957Z] Field "/firestore" in "firebase.json" is possibly invalid: must match a schema in anyOf
[debug] [2025-10-16T13:44:50.959Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-10-16T13:44:50.959Z] > authorizing via signed-in user (tolgatkececi@gmail.com)
[debug] [2025-10-16T13:44:50.959Z] [iam] checking project yenisirket-2ec3b for permissions ["datastore.indexes.create","datastore.indexes.delete","datastore.indexes.list","datastore.indexes.update","firebase.projects.get"]
[debug] [2025-10-16T13:44:50.959Z] Checked if tokens are valid: false, expires at: 1760622622860
[debug] [2025-10-16T13:44:50.959Z] Checked if tokens are valid: false, expires at: 1760622622860
[debug] [2025-10-16T13:44:50.959Z] > refreshing access token with scopes: []
[debug] [2025-10-16T13:44:50.959Z] >>> [apiv2][query] POST https://www.googleapis.com/oauth2/v3/token [none]
[debug] [2025-10-16T13:44:50.960Z] >>> [apiv2][body] POST https://www.googleapis.com/oauth2/v3/token [omitted]
[debug] [2025-10-16T13:44:51.211Z] <<< [apiv2][status] POST https://www.googleapis.com/oauth2/v3/token 200
[debug] [2025-10-16T13:44:51.212Z] <<< [apiv2][body] POST https://www.googleapis.com/oauth2/v3/token [omitted]
[debug] [2025-10-16T13:44:51.223Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/yenisirket-2ec3b:testIamPermissions [none]
[debug] [2025-10-16T13:44:51.224Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/yenisirket-2ec3b:testIamPermissions x-goog-quota-user=projects/yenisirket-2ec3b
[debug] [2025-10-16T13:44:51.224Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/yenisirket-2ec3b:testIamPermissions {"permissions":["datastore.indexes.create","datastore.indexes.delete","datastore.indexes.list","datastore.indexes.update","firebase.projects.get"]}
[debug] [2025-10-16T13:44:51.360Z] <<< [apiv2][status] GET https://firebase-public.firebaseio.com/cli.json 200
[debug] [2025-10-16T13:44:51.361Z] <<< [apiv2][body] GET https://firebase-public.firebaseio.com/cli.json {"cloudBuildErrorAfter":1594252800000,"cloudBuildWarnAfter":1590019200000,"defaultNode10After":1594252800000,"minVersion":"3.0.5","node8DeploysDisabledAfter":1613390400000,"node8RuntimeDisabledAfter":1615809600000,"node8WarnAfter":1600128000000}
[debug] [2025-10-16T13:44:52.263Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/yenisirket-2ec3b:testIamPermissions 200
[debug] [2025-10-16T13:44:52.263Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/yenisirket-2ec3b:testIamPermissions {"permissions":["datastore.indexes.create","datastore.indexes.delete","datastore.indexes.list","datastore.indexes.update","firebase.projects.get"]}
[info] 
[info] === Deploying to 'yenisirket-2ec3b'...
[info] 
[info] i  deploying firestore 
[info] i  firestore: reading indexes from firestore.indexes.json... 
[info] i  cloud.firestore: checking firestore.rules for compilation errors... 
[debug] [2025-10-16T13:44:52.268Z] Checked if tokens are valid: true, expires at: 1760625890212
[debug] [2025-10-16T13:44:52.268Z] Checked if tokens are valid: true, expires at: 1760625890212
[debug] [2025-10-16T13:44:52.268Z] >>> [apiv2][query] POST https://firebaserules.googleapis.com/v1/projects/yenisirket-2ec3b:test [none]
[debug] [2025-10-16T13:44:52.268Z] >>> [apiv2][body] POST https://firebaserules.googleapis.com/v1/projects/yenisirket-2ec3b:test [omitted]
[debug] [2025-10-16T13:44:53.297Z] <<< [apiv2][status] POST https://firebaserules.googleapis.com/v1/projects/yenisirket-2ec3b:test 200
[debug] [2025-10-16T13:44:53.298Z] <<< [apiv2][body] POST https://firebaserules.googleapis.com/v1/projects/yenisirket-2ec3b:test {}
[info] ✔  cloud.firestore: rules file firestore.rules compiled successfully 
[debug] [2025-10-16T13:44:53.299Z] Checked if tokens are valid: true, expires at: 1760625890212
[debug] [2025-10-16T13:44:53.299Z] Checked if tokens are valid: true, expires at: 1760625890212
[debug] [2025-10-16T13:44:53.300Z] >>> [apiv2][query] GET https://firebaserules.googleapis.com/v1/projects/yenisirket-2ec3b/releases pageSize=10&pageToken=
[debug] [2025-10-16T13:44:54.046Z] <<< [apiv2][status] GET https://firebaserules.googleapis.com/v1/projects/yenisirket-2ec3b/releases 200
[debug] [2025-10-16T13:44:54.047Z] <<< [apiv2][body] GET https://firebaserules.googleapis.com/v1/projects/yenisirket-2ec3b/releases {"releases":[{"name":"projects/yenisirket-2ec3b/releases/cloud.firestore","rulesetName":"projects/yenisirket-2ec3b/rulesets/84a1ba2f-81ce-44ed-805c-9215793461f3","createTime":"2025-04-16T12:46:50.913146Z","updateTime":"2025-09-22T13:51:47.631201Z"},{"name":"projects/yenisirket-2ec3b/releases/firebase.storage/yenisirket-2ec3b.firebasestorage.app","rulesetName":"projects/yenisirket-2ec3b/rulesets/bcd7220b-6901-4770-a4fb-2514940ac7b6","createTime":"2025-04-16T12:48:06.179172Z","updateTime":"2025-10-08T13:30:50.449676Z"}]}
[debug] [2025-10-16T13:44:54.059Z] Checked if tokens are valid: true, expires at: 1760625890212
[debug] [2025-10-16T13:44:54.059Z] Checked if tokens are valid: true, expires at: 1760625890212
[debug] [2025-10-16T13:44:54.059Z] >>> [apiv2][query] GET https://firebaserules.googleapis.com/v1/projects/yenisirket-2ec3b/rulesets/84a1ba2f-81ce-44ed-805c-9215793461f3 [none]
[debug] [2025-10-16T13:44:54.779Z] <<< [apiv2][status] GET https://firebaserules.googleapis.com/v1/projects/yenisirket-2ec3b/rulesets/84a1ba2f-81ce-44ed-805c-9215793461f3 200
[debug] [2025-10-16T13:44:54.780Z] <<< [apiv2][body] GET https://firebaserules.googleapis.com/v1/projects/yenisirket-2ec3b/rulesets/84a1ba2f-81ce-44ed-805c-9215793461f3 [omitted]
[info] i  firestore: uploading rules firestore.rules... 
[debug] [2025-10-16T13:44:54.781Z] Checked if tokens are valid: true, expires at: 1760625890212
[debug] [2025-10-16T13:44:54.781Z] Checked if tokens are valid: true, expires at: 1760625890212
[debug] [2025-10-16T13:44:54.782Z] >>> [apiv2][query] POST https://firebaserules.googleapis.com/v1/projects/yenisirket-2ec3b/rulesets [none]
[debug] [2025-10-16T13:44:54.782Z] >>> [apiv2][body] POST https://firebaserules.googleapis.com/v1/projects/yenisirket-2ec3b/rulesets [omitted]
[debug] [2025-10-16T13:44:55.969Z] <<< [apiv2][status] POST https://firebaserules.googleapis.com/v1/projects/yenisirket-2ec3b/rulesets 200
[debug] [2025-10-16T13:44:55.970Z] <<< [apiv2][body] POST https://firebaserules.googleapis.com/v1/projects/yenisirket-2ec3b/rulesets {"name":"projects/yenisirket-2ec3b/rulesets/59f3d636-3940-4710-bd55-52da3606533a","source":{"files":[{"content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    \n    // Yardımcı fonksiyonlar\n    function isAuthenticated() {\n      return request.auth != null;\n    }\n    \n    function getUserData() {\n      return get(/databases/$(database)/documents/kullanicilar/$(request.auth.uid)).data;\n    }\n    \n    function getUserRole() {\n      return getUserData().rol;\n    }\n    \n    function getUserCompany() {\n      return getUserData().companyId;\n    }\n    \n    function getUserSahalar() {\n      return getUserData().sahalar;\n    }\n    \n    function getUserSantraller() {\n      return getUserData().santraller;\n    }\n    \n    function isSuperAdmin() {\n      return isAuthenticated() && getUserRole() == 'superadmin';\n    }\n    \n    function isYonetici() {\n      return isAuthenticated() && getUserRole() == 'yonetici';\n    }\n    \n    function isMuhendis() {\n      return isAuthenticated() && getUserRole() == 'muhendis';\n    }\n    \n    function isTekniker() {\n      return isAuthenticated() && getUserRole() == 'tekniker';\n    }\n    \n    function isMusteri() {\n      return isAuthenticated() && getUserRole() == 'musteri';\n    }\n    \n    function isBekci() {\n      return isAuthenticated() && getUserRole() == 'bekci';\n    }\n    \n    function sameCompany(companyId) {\n      return getUserCompany() == companyId;\n    }\n    \n    function canRead() {\n      return isSuperAdmin() || isYonetici() || isMuhendis() || isTekniker() || isMusteri() || isBekci();\n    }\n    \n    function canWrite() {\n      return isSuperAdmin() || isYonetici() || isMuhendis() || isTekniker() || isBekci();\n    }\n    \n    function canDelete() {\n      return isSuperAdmin() || isYonetici() || isMuhendis();\n    }\n    \n    function canManageEkip() {\n      return isSuperAdmin() || isYonetici();\n    }\n    \n    function canManageMusteri() {\n      return isSuperAdmin() || isYonetici();\n    }\n    \n    function canManageCompany() {\n      return isSuperAdmin() || isYonetici();\n    }\n    \n    // Abonelik Planları (Sadece SuperAdmin yönetebilir)\n    match /subscriptionPlans/{planId} {\n      allow read: if request.auth != null;\n      allow write: if isSuperAdmin();\n      allow create: if isSuperAdmin();\n      allow update: if isSuperAdmin();\n      allow delete: if isSuperAdmin();\n    }\n\n    // SaaS plan yapılandırması (config/saas_plans) - herkes okuyabilir, sadece SuperAdmin yazar\n    match /config/saas_plans {\n      allow read: if isAuthenticated();\n      allow write, update, delete: if isSuperAdmin();\n    }\n\n    // SuperAdmin kontrolü her collection'da ayrı yapılıyor\n    // Wildcard kaldırıldı - güvenlik için\n    \n    // Kullanıcı profilleri\n    match /kullanicilar/{userId} {\n      allow read: if isAuthenticated() && (\n        isSuperAdmin() ||\n        request.auth.uid == userId || \n        (sameCompany(resource.data.companyId) && canRead())\n      );\n      allow write: if isAuthenticated() && (\n        isSuperAdmin() ||\n        request.auth.uid == userId ||\n        (sameCompany(resource.data.companyId) && canManageEkip())\n      );\n      // Kayıt sırasında kendi profilini oluşturabilir\n      allow create: if isAuthenticated() && (\n        request.auth.uid == userId ||\n        isSuperAdmin() || \n        canManageEkip()\n      );\n      allow delete: if isAuthenticated() && (isSuperAdmin() || (canManageEkip() && request.auth.uid != userId));\n    }\n    \n    // Şirket bilgileri\n    match /companies/{companyId} {\n      allow read: if isAuthenticated() && (isSuperAdmin() || sameCompany(companyId));\n      allow write: if isAuthenticated() && (isSuperAdmin() || (sameCompany(companyId) && canManageCompany()));\n      // Kayıt sırasında şirket oluşturulabilir\n      allow create: if isAuthenticated() && (\n        companyId == \"company_\" + request.auth.uid ||\n        isSuperAdmin()\n      );\n    }\n    \n    // Arızalar\n    match /arizalar/{faultId} {\n      allow read: if isAuthenticated() && (\n        isSuperAdmin() ||\n        (sameCompany(resource.data.companyId) && (\n          canRead() ||\n          // Müşteri sadece atanan saha/santrallarını görebilir\n          (isMusteri() && (\n            resource.data.sahaId in getUserSahalar() ||\n            resource.data.santralId in getUserSantraller()\n          )) ||\n          // Tekniker/Bekçi sadece kendi raporladığını görebilir\n          ((isTekniker() || isBekci()) && resource.data.raporlayanId == request.auth.uid)\n        ))\n      );\n      allow create: if isAuthenticated() && (\n        isSuperAdmin() ||\n        (sameCompany(request.resource.data.companyId) && (canWrite() || isBekci()))\n      );\n      allow update: if isAuthenticated() && (\n        isSuperAdmin() ||\n        (sameCompany(resource.data.companyId) && (\n          isYonetici() || isMuhendis() ||\n          // Tekniker sadece çözüm ekleyebilir\n          (isTekniker() && resource.data.raporlayanId == request.auth.uid)\n        ))\n      );\n      allow delete: if isAuthenticated() && (\n        isSuperAdmin() ||\n        (sameCompany(resource.data.companyId) && canDelete())\n      );\n    }\n    \n    // Santraller (GES)\n    match /santraller/{santralId} {\n      allow read: if isAuthenticated() && (\n        isSuperAdmin() ||\n        (sameCompany(resource.data.companyId) && (\n          canRead() ||\n          // Müşteri sadece atanan santralları görebilir\n          (isMusteri() && santralId in getUserSantraller())\n        ))\n      );\n      allow create: if isAuthenticated() && (\n        isSuperAdmin() ||\n        (sameCompany(request.resource.data.companyId) && (isYonetici() || isMuhendis()))\n      );\n      allow update: if isAuthenticated() && (\n        isSuperAdmin() ||\n        (sameCompany(resource.data.companyId) && (isYonetici() || isMuhendis()))\n      );\n      allow delete: if isAuthenticated() && (\n        isSuperAdmin() ||\n        (sameCompany(resource.data.companyId) && canDelete())\n      );\n      \n      // Santral alt koleksiyonları\n      match /aylikUretim/{yil} {\n        allow read: if isAuthenticated() && (\n          isSuperAdmin() ||\n          sameCompany(get(/databases/$(database)/documents/santraller/$(santralId)).data.companyId)\n        );\n        allow write: if isAuthenticated() && (\n          isSuperAdmin() ||\n          (sameCompany(get(/databases/$(database)/documents/santraller/$(santralId)).data.companyId) && canWrite())\n        );\n      }\n      \n      match /uretimVerileri/{uretimId} {\n        allow read: if isAuthenticated() && (\n          isSuperAdmin() ||\n          sameCompany(get(/databases/$(database)/documents/santraller/$(santralId)).data.companyId)\n        );\n        allow write: if isAuthenticated() && (\n          isSuperAdmin() ||\n          (sameCompany(get(/databases/$(database)/documents/santraller/$(santralId)).data.companyId) && canWrite())\n        );\n      }\n    }\n    \n    // Bakım kayıtları\n    match /elektrikBakimlar/{bakimId} {\n      allow read: if isAuthenticated() && (isSuperAdmin() || (sameCompany(resource.data.companyId) && canRead()));\n      allow create: if isAuthenticated() && (isSuperAdmin() || (sameCompany(request.resource.data.companyId) && canWrite()));\n      allow update: if isAuthenticated() && (\n        isSuperAdmin() || \n        (sameCompany(resource.data.companyId) && (isYonetici() || isMuhendis()))\n      );\n      allow delete: if isAuthenticated() && (isSuperAdmin() || (sameCompany(resource.data.companyId) && canDelete()));\n    }\n    \n    match /mekanikBakimlar/{bakimId} {\n      allow read: if isAuthenticated() && (isSuperAdmin() || (sameCompany(resource.data.companyId) && canRead()));\n      allow create: if isAuthenticated() && (isSuperAdmin() || (sameCompany(request.resource.data.companyId) && canWrite()));\n      allow update: if isAuthenticated() && (\n        isSuperAdmin() || \n        (sameCompany(resource.data.companyId) && (isYonetici() || isMuhendis()))\n      );\n      allow delete: if isAuthenticated() && (isSuperAdmin() || (sameCompany(resource.data.companyId) && canDelete()));\n    }\n    \n    // Üretim verileri\n    match /uretimVerileri/{uretimId} {\n      allow read: if isAuthenticated() && sameCompany(resource.data.companyId) && canRead();\n      allow create: if isAuthenticated() && sameCompany(request.resource.data.companyId) && canWrite();\n      allow update: if isAuthenticated() && sameCompany(resource.data.companyId) && (\n        isSuperAdmin() || isYonetici() || isMuhendis()\n      );\n      allow delete: if isAuthenticated() && sameCompany(resource.data.companyId) && canDelete();\n    }\n    \n    // Sahalar\n    match /sahalar/{sahaId} {\n      allow read: if isAuthenticated() && (\n        isSuperAdmin() ||\n        (sameCompany(resource.data.companyId) && (\n          canRead() ||\n          // Müşteri sadece atanan sahaları görebilir\n          (isMusteri() && sahaId in getUserSahalar())\n        ))\n      );\n      allow create: if isAuthenticated() && (\n        isSuperAdmin() ||\n        (sameCompany(request.resource.data.companyId) && (isYonetici() || isMuhendis()))\n      );\n      allow update: if isAuthenticated() && (\n        isSuperAdmin() ||\n        (sameCompany(resource.data.companyId) && (isYonetici() || isMuhendis()))\n      );\n      allow delete: if isAuthenticated() && (\n        isSuperAdmin() ||\n        (sameCompany(resource.data.companyId) && canDelete())\n      );\n    }\n    \n    // Müşteriler\n    match /musteriler/{musteriId} {\n      // SuperAdmin tüm şirket müşteri kayıtlarını görebilmeli; diğer roller kendi şirketiyle sınırlı\n      allow read: if isAuthenticated() && (\n        isSuperAdmin() ||\n        (sameCompany(resource.data.companyId) && canRead())\n      );\n      allow create: if isAuthenticated() && (\n        isSuperAdmin() ||\n        (sameCompany(request.resource.data.companyId) && canManageMusteri())\n      );\n      allow update: if isAuthenticated() && (\n        isSuperAdmin() ||\n        (sameCompany(resource.data.companyId) && canManageMusteri())\n      );\n      allow delete: if isAuthenticated() && (\n        isSuperAdmin() ||\n        (sameCompany(resource.data.companyId) && canManageMusteri())\n      );\n    }\n    \n    // Stok kayıtları\n    match /stoklar/{stokId} {\n      allow read: if isAuthenticated() && (isSuperAdmin() || (sameCompany(resource.data.companyId) && canRead()));\n      allow create: if isAuthenticated() && (isSuperAdmin() || (sameCompany(request.resource.data.companyId) && canWrite()));\n      allow update: if isAuthenticated() && (\n        isSuperAdmin() || \n        (sameCompany(resource.data.companyId) && (isYonetici() || isMuhendis()))\n      );\n      allow delete: if isAuthenticated() && (isSuperAdmin() || (sameCompany(resource.data.companyId) && canDelete()));\n    }\n    \n    // Stok hareketleri\n    match /stokHareketleri/{hareketId} {\n      allow read: if isAuthenticated() && (\n        isSuperAdmin() || \n        canRead()\n      );\n      allow list: if isAuthenticated() && (\n        isSuperAdmin() || \n        canRead()\n      );\n      allow create: if isAuthenticated() && (isSuperAdmin() || (sameCompany(request.resource.data.companyId) && canWrite()));\n      allow update: if isAuthenticated() && (\n        isSuperAdmin() || \n        (sameCompany(resource.data.companyId) && (isYonetici() || isMuhendis()))\n      );\n      allow delete: if isAuthenticated() && (isSuperAdmin() || (sameCompany(resource.data.companyId) && canDelete()));\n    }\n    \n    // Vardiya bildirimleri\n    match /vardiyaBildirimleri/{vardiyaId} {\n      allow read: if isAuthenticated() && (isSuperAdmin() || (sameCompany(resource.data.companyId) && canRead()));\n      allow create: if isAuthenticated() && (\n        isSuperAdmin() ||\n        (sameCompany(request.resource.data.companyId) && (canWrite() || isBekci()))\n      );\n      allow update: if isAuthenticated() && (\n        isSuperAdmin() ||\n        (sameCompany(resource.data.companyId) && (\n          isYonetici() || isMuhendis() || isMusteri() || isTekniker() ||\n          // Bekçi sadece kendi vardiyasını düzenleyebilir\n          (isBekci() && resource.data.bekciId == request.auth.uid)\n        ))\n      );\n      allow delete: if isAuthenticated() && (\n        isSuperAdmin() ||\n        (sameCompany(resource.data.companyId) && (\n          isYonetici() || isMuhendis() || isTekniker() ||\n          // Bekçi sadece kendi oluşturduğu vardiyayı silebilir\n          (isBekci() && resource.data.olusturanId == request.auth.uid)\n        ))\n      );\n    }\n    \n    // Elektrik kesintileri\n    match /elektrikKesintileri/{kesintiId} {\n      allow read: if isAuthenticated() && (\n        isSuperAdmin() ||\n        (sameCompany(resource.data.companyId) && canRead())\n      );\n      allow create: if isAuthenticated() && (\n        isSuperAdmin() ||\n        (sameCompany(request.resource.data.companyId) && canWrite())\n      );\n      allow update: if isAuthenticated() && (\n        isSuperAdmin() || \n        (sameCompany(resource.data.companyId) && (isYonetici() || isMuhendis()))\n      );\n      allow delete: if isAuthenticated() && (\n        isSuperAdmin() || \n        (sameCompany(resource.data.companyId) && canDelete())\n      );\n    }\n    \n    // Müşteri Geri Bildirimleri\n    match /feedback/{feedbackId} {\n      allow read: if isAuthenticated() && (\n        isSuperAdmin() || (\n          sameCompany(resource.data.companyId) && canRead()\n        )\n      );\n      // Oluşturma: Müşteri ana yorum, personel sadece yanıt\n      allow create: if isAuthenticated() && (\n        isSuperAdmin() || (\n          // Müşteri: yetkili olduğu saha/santral için ana yorum\n          (isMusteri() && sameCompany(request.resource.data.companyId) &&\n            request.resource.data.userId == request.auth.uid && (\n              request.resource.data.sahaId in getUserSahalar() ||\n              request.resource.data.santralId in getUserSantraller()\n            )\n          ) ||\n          // Personel: sadece yanıt (parentId zorunlu)\n          ((isYonetici() || isMuhendis() || isTekniker()) && \n            sameCompany(request.resource.data.companyId) &&\n            request.resource.data.parentId != null)\n        )\n      );\n      // Kullanıcı (müşteri/personel) kendi yorumunu/puanını güncelleyebilir\n      allow update: if isAuthenticated() && (\n        isSuperAdmin() || (\n          (isMusteri() || isYonetici() || isMuhendis() || isTekniker()) &&\n          sameCompany(resource.data.companyId) && resource.data.userId == request.auth.uid\n        )\n      );\n      // Silme: kullanıcı kendi yorumunu silebilir, yönetici tüm yorumları silebilir\n      allow delete: if isAuthenticated() && (\n        isSuperAdmin() || \n        (resource.data.userId == request.auth.uid) ||\n        (sameCompany(resource.data.companyId) && isYonetici())\n      );\n\n      // Reaksiyon alt koleksiyonu (like)\n      match /likes/{userId} {\n        allow read: if isAuthenticated() && (\n          isSuperAdmin() || sameCompany(get(/databases/$(database)/documents/feedback/$(feedbackId)).data.companyId)\n        );\n        // Kullanıcı (müşteri/personel) kendi like kaydını oluşturur/siler\n        allow create, update, delete: if isAuthenticated() && (\n          (isMusteri() || isYonetici() || isMuhendis() || isTekniker()) &&\n          userId == request.auth.uid &&\n          sameCompany(get(/databases/$(database)/documents/feedback/$(feedbackId)).data.companyId)\n        );\n      }\n    }\n\n    // Bildirimler\n    match /notifications/{notificationId} {\n      allow read: if isAuthenticated() && (\n        isSuperAdmin() || (sameCompany(resource.data.companyId) && canRead())\n      );\n      allow create: if isAuthenticated() && (\n        isSuperAdmin() || (sameCompany(request.resource.data.companyId) && canWrite())\n      );\n      // Okundu bilgisini ve gizleme işlemini tüm roller yapabilsin (şirket içi)\n      allow update: if isAuthenticated() && sameCompany(resource.data.companyId);\n      // Bildirimler artık silinmiyor, sadece gizleniyor (update ile)\n      allow delete: if isAuthenticated() && isSuperAdmin();\n    }\n    \n    // Audit Logları - SuperAdmin ve Yöneticiler okuyabilir\n    match /auditLogs/{logId} {\n      allow read: if isAuthenticated() && (isSuperAdmin() || isYonetici());\n      allow create: if isAuthenticated();\n      allow update: if false; // Loglar güncellenemez\n      allow delete: if isSuperAdmin(); // Sadece SuperAdmin silebilir\n    }\n    \n    // Abonelik bilgileri - Şirket kendi aboneliğini görebilir, SuperAdmin hepsini görebilir\n    match /subscriptions/{subscriptionId} {\n      allow read: if isAuthenticated() && (\n        isSuperAdmin() || \n        subscriptionId == getUserCompany()\n      );\n      allow create: if isAuthenticated() && isSuperAdmin();\n      allow update: if isAuthenticated() && (\n        isSuperAdmin() || \n        (subscriptionId == getUserCompany() && isYonetici())\n      );\n      allow delete: if isAuthenticated() && isSuperAdmin();\n    }\n    \n    // Sistem Ayarları - Sadece SuperAdmin yönetebilir\n    match /systemSettings/{settingId} {\n      allow read: if isAuthenticated() && isSuperAdmin();\n      allow write: if isAuthenticated() && isSuperAdmin();\n      allow create: if isAuthenticated() && isSuperAdmin();\n      allow update: if isAuthenticated() && isSuperAdmin();\n      allow delete: if isAuthenticated() && isSuperAdmin();\n    }\n    \n    // Diğer tüm koleksiyonlar için temel kurallar\n    match /{collection}/{document} {\n      allow read: if isAuthenticated() && (\n        !exists(/databases/$(database)/documents/$(collection)/$(document)) ||\n        sameCompany(resource.data.companyId)\n      ) && canRead();\n      allow write: if isAuthenticated() && (\n        !exists(/databases/$(database)/documents/$(collection)/$(document)) ||\n        sameCompany(resource.data.companyId)\n      ) && canWrite();\n      allow delete: if isAuthenticated() && sameCompany(resource.data.companyId) && canDelete();\n    }\n    \n    // Backup kayıtları\n    match /backups/{backupId} {\n      allow read: if isAuthenticated() && \n        (isSuperAdmin() || \n         (getUserData().companyId == resource.data.companyId && \n          getUserData().rol in ['yonetici', 'superadmin']));\n      allow write: if isAuthenticated() && \n        (isSuperAdmin() || getUserData().rol in ['yonetici', 'superadmin']);\n      allow delete: if isAuthenticated() && \n        (isSuperAdmin() || getUserData().rol == 'yonetici');\n    }\n    \n    // Backup logları\n    match /backupLogs/{logId} {\n      allow read: if isAuthenticated() && \n        (isSuperAdmin() || getUserData().rol == 'yonetici');\n      allow write: if isAuthenticated();\n    }\n    \n    // SuperAdmin için eksik collection'lar\n    // subscriptionUpgradeRequests - Plan yükseltme talepleri\n    match /subscriptionUpgradeRequests/{requestId} {\n      allow read: if isAuthenticated() && (\n        isSuperAdmin() || \n        (resource.data.companyId == getUserCompany() && isYonetici())\n      );\n      allow create: if isAuthenticated() && isYonetici();\n      allow update: if isAuthenticated() && isSuperAdmin();\n      allow delete: if isAuthenticated() && isSuperAdmin();\n    }\n    \n    // adminActivityLogs - Admin aktivite logları\n    match /adminActivityLogs/{logId} {\n      allow read: if isAuthenticated() && isSuperAdmin();\n      allow write: if isAuthenticated() && isSuperAdmin();\n      allow create: if isAuthenticated() && isSuperAdmin();\n      allow delete: if false; // Loglar silinmemeli\n    }\n    \n    // emailLogs - Email logları\n    match /emailLogs/{logId} {\n      allow read: if isAuthenticated() && (\n        isSuperAdmin() || isYonetici()\n      );\n      allow write: if isAuthenticated();\n      allow delete: if false; // Email logları silinmemeli\n    }\n    \n    // auditLogs - Denetim logları\n    match /auditLogs/{logId} {\n      allow read: if isAuthenticated() && (\n        isSuperAdmin() || \n        (resource.data.companyId == getUserCompany() && isYonetici())\n      );\n      allow write: if isAuthenticated();\n      allow delete: if false; // Audit loglar asla silinmemeli\n    }\n    \n    // metrics - Performance metrics (Dashboard için)\n    match /companies/{companyId}/metrics/{metricId} {\n      allow read: if isAuthenticated() && (\n        isSuperAdmin() || \n        companyId == getUserCompany()\n      );\n      allow write: if isAuthenticated() && (\n        isSuperAdmin() || \n        (companyId == getUserCompany() && isYonetici())\n      );\n    }\n    \n    // İzin Yönetimi Koleksiyonları\n    // leaveRequests - İzin talepleri\n    match /leaveRequests/{requestId} {\n      allow read: if isAuthenticated() && (\n        isSuperAdmin() || \n        isYonetici() ||\n        resource.data.userId == request.auth.uid ||\n        resource.data.companyId == getUserCompany()\n      );\n      allow create: if isAuthenticated() && \n        request.resource.data.userId == request.auth.uid;\n      allow update: if isAuthenticated() && (\n        isSuperAdmin() || \n        isYonetici() ||\n        (resource.data.userId == request.auth.uid && resource.data.status == 'beklemede')\n      );\n      allow delete: if isAuthenticated() && isSuperAdmin();\n    }\n    \n    // leaveBalances - İzin bakiyeleri\n    match /leaveBalances/{balanceId} {\n      allow read: if isAuthenticated() && (\n        isSuperAdmin() || \n        isYonetici() ||\n        resource.data.userId == request.auth.uid\n      );\n      allow write: if isAuthenticated() && (\n        isSuperAdmin() || \n        isYonetici()\n      );\n    }\n    \n    // holidays - Resmi tatiller\n    match /holidays/{holidayId} {\n      allow read: if isAuthenticated() && \n        resource.data.companyId == getUserCompany();\n      allow write: if isAuthenticated() && (\n        isSuperAdmin() || \n        isYonetici()\n      );\n    }\n    \n    // shiftSchedules - Vardiya programları\n    match /shiftSchedules/{scheduleId} {\n      allow read: if isAuthenticated() && (\n        isSuperAdmin() || \n        isYonetici() ||\n        resource.data.userId == request.auth.uid ||\n        resource.data.companyId == getUserCompany()\n      );\n      allow write: if isAuthenticated() && (\n        isSuperAdmin() || \n        isYonetici()\n      );\n    }\n  }\n}","name":"firestore.rules"}]},"createTime":"2025-10-16T13:44:55.910751Z","metadata":{"services":["cloud.firestore"]}}
[debug] [2025-10-16T13:44:55.971Z] [rules] created ruleset projects/yenisirket-2ec3b/rulesets/59f3d636-3940-4710-bd55-52da3606533a
[debug] [2025-10-16T13:44:55.971Z] [rules] releasing cloud.firestore/(default) with ruleset projects/yenisirket-2ec3b/rulesets/59f3d636-3940-4710-bd55-52da3606533a
[debug] [2025-10-16T13:44:55.971Z] Checked if tokens are valid: true, expires at: 1760625890212
[debug] [2025-10-16T13:44:55.971Z] Checked if tokens are valid: true, expires at: 1760625890212
[debug] [2025-10-16T13:44:55.971Z] >>> [apiv2][query] PATCH https://firebaserules.googleapis.com/v1/projects/yenisirket-2ec3b/releases/cloud.firestore/(default) [none]
[debug] [2025-10-16T13:44:55.971Z] >>> [apiv2][body] PATCH https://firebaserules.googleapis.com/v1/projects/yenisirket-2ec3b/releases/cloud.firestore/(default) {"release":{"name":"projects/yenisirket-2ec3b/releases/cloud.firestore/(default)","rulesetName":"projects/yenisirket-2ec3b/rulesets/59f3d636-3940-4710-bd55-52da3606533a"}}
[debug] [2025-10-16T13:44:57.134Z] <<< [apiv2][status] PATCH https://firebaserules.googleapis.com/v1/projects/yenisirket-2ec3b/releases/cloud.firestore/(default) 200
[debug] [2025-10-16T13:44:57.135Z] <<< [apiv2][body] PATCH https://firebaserules.googleapis.com/v1/projects/yenisirket-2ec3b/releases/cloud.firestore/(default) {"name":"projects/yenisirket-2ec3b/releases/cloud.firestore","rulesetName":"projects/yenisirket-2ec3b/rulesets/59f3d636-3940-4710-bd55-52da3606533a","createTime":"2025-04-16T12:46:50.913146Z","updateTime":"2025-10-16T13:44:57.077525Z"}
[debug] [2025-10-16T13:44:57.135Z] [rules] updated release projects/yenisirket-2ec3b/releases/cloud.firestore
[info] ✔  firestore: released rules firestore.rules to cloud.firestore 
[info] 
[info] ✔  Deploy complete! 
[info] 
[info] Project Console: https://console.firebase.google.com/project/yenisirket-2ec3b/overview
